ext {
    appVersions = [
            id  : "mobiric.fhbsc.weather",
            code: 7,
            name: '1.1.0'
    ]
    buildVersions = [
            compileSdk: 27,
            minSdk    : 17,
            targetSdk : 26
    ]
    libVersions = [
            supportLib : '27.0.2',
            aboutLib   : '6.0.1@aar',
            stetho     : '1.5.0',
            gson       : '2.8.2',
            crashlytics: '2.6.5@aar'
    ]
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.25.1'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion buildVersions.compileSdk

    /* APACHE HTTP - deprecated */
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId appVersions.id

        minSdkVersion buildVersions.minSdk
        //noinspection OldTargetApi
        targetSdkVersion buildVersions.targetSdk
        versionCode appVersions.code
        versionName appVersions.name

        // allow Crashlytics configuration based on build type - disable this in debug builds
        buildConfigField("boolean", "CRASHLYTICS", "true")

        /*BETA DISTRIBUTION*/
        ext.betaDistributionReleaseNotesFilePath = "extras/fabric/beta/release_notes.txt"
        ext.betaDistributionEmailsFilePath = "extras/fabric/beta/distribution.txt"
    }

    signingConfigs {
        release {
            // keystore properties stored in an external file - do not commit to repo
            def keystorePropertiesFile = rootProject.file("keystore.properties")
            if (keystorePropertiesFile.exists()) {
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            buildConfigField("boolean", "CRASHLYTICS", "false")
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }

}

dependencies {
    /* Support Libs */
    implementation "com.android.support:support-core-utils:${libVersions.supportLib}"
    implementation "com.android.support:appcompat-v7:${libVersions.supportLib}"

    /* GSON */
    implementation "com.google.code.gson:gson:${libVersions.gson}"

    /* Crashlytics */
    implementation("com.crashlytics.sdk.android:crashlytics:${libVersions.crashlytics}") {
        transitive = true;
    }
}
